"""
Django settings for crypto project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
import django_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n_6k0&$wj*^uoh+q689t0plyy2kl)e$9=rv4&$7(^ik=x+ac)6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['cryptoz-marketplace.herokuapp.com/']


# Application definition

INSTALLED_APPS = [
    'market',
    'storages',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crypto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crypto.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'crypto_marketplace',
        'USER': 'admin',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATIC_URL = '/static/'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'market.CustomUser'

# MAX_UPLOAD_SIZE = 1024 * 1024 * 2 
# DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 2  # 10MB
# FILE_UPLOAD_MAX_MEMORY_SIZE = DATA_UPLOAD_MAX_MEMORY_SIZE

# DATE_INPUT_FORMATS = ('%Y-%m-%d')
# USE_S3 = os.getenv('USE_S3') == 'TRUE'
# USE_S3 = False

# if USE_S3:
#     # aws settings
#     AWS_ACCESS_KEY_ID = 'AKIAQVQCFX7ZVLSRVUU3'
#     AWS_SECRET_ACCESS_KEY = '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'
#     AWS_STORAGE_BUCKET_NAME = 'crypto-marketplace'

#     AWS_DEFAULT_ACL = 'public-read'
#     AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.us-east-2.amazonaws.com'
#     AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
#     # s3 static settings

#     AWS_LOCATION = 'static'
#     # STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'
   
#     MEDIA_URL = 'https://s3.us-east-2.amazonaws.com:443/%s/media/' % AWS_STORAGE_BUCKET_NAME
#     STATIC_URL = 'https://s3.us-east-2.amazonaws.com:443/%s/static/' % AWS_STORAGE_BUCKET_NAME

#     STATIC_ROOT =  os.path.join(BASE_DIR, 'staticfiles')

#     AWS_S3_FILE_OVERWRITE = False
#     AWS_DEFAULT_ACL = None

#     DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#     STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'


# else:
#     STATIC_URL = '/static/'
#     STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

# Activate Django-Heroku.

django_heroku.settings(locals())

# Email settings

DEFAULT_FROM_EMAIL = 'cmarket263@gmail.com'
DEFAULT_TO_EMAIL = 'cmarket263@gmail.com'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'cmarket263@gmail.com'
EMAIL_HOST_PASSWORD = "wjwQZ3Re+N_'6R(M"
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# the default bank to send money to
# Change usd_deposit page details when updated
DEFAULT_BANK = 'Virtual'
DEFAULT_BANK_ACCOUNT = '00'

RAPID_API_KEY = '42e11407a8msh3e7bfe671792741p13625fjsn79c7af84436e'